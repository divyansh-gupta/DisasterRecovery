<?xml version="1.0" encoding="UTF-8"?>
<!--
Created by Divyansh Gupta on 2017.02.21 
Copyright Â© 2017 Divyansh Gupta. All rights reserved.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">

    <ui:composition template="template/siteTemplate.xhtml">

        <ui:define name="title">
            <h:outputText value="My Account"></h:outputText>
        </ui:define>

        <ui:define name="editableContent">
            <script>
                function ClickButton() {
                    $('.b#{messageManager.locationEngaged.alternateName}#{messageManager.locationEngaged.id}').each(
                            function () {
                                var button = $(this);
//                                console.log($(this) + " being clicked");
                                button.click();
                            }
                    );
                }
                $(function () {
                    setInterval(ClickButton, 1000)
                });
            </script>
            <!--<h:form id="talkingForm">-->
            <p:outputLabel id="talkingTo"  value="#{messageManager.getLocationEngaged().locationName}"></p:outputLabel>
            <!--</h:form>-->
            <p:growl id="growl" life="5000" />
            <h:form>
                <p:layout style="min-width:400px;min-height:400px;">
                    <p:layoutUnit position="west" resizable="true" size="100" minSize="100" maxSize="200">
                        <c:forEach items="#{messageManager.getMessageLocations()}" var="location">
                            <p:commandButton class="b#{location.alternateName}#{location.id}" value="#{location.locationName}"
                                             update="MessageViewForm:datalistMessages talkingTo"
                                             actionListener="#{messageManager.setLocationEngaged(location)}" >
                            </p:commandButton>
                        </c:forEach>
                    </p:layoutUnit>
                    <p:layoutUnit position="center">
                        <div style="text-align: center">
                            <h:form id="MessageViewForm" >
                                <!--<p:ajax event="change" update="datalistMessages" listener="#{messageManager.messagesBetweenSelectedLocationAndUser()}" />-->
                                <div style="overflow-y: scroll" height="500">
                                    <p:dataTable id="datalistMessages" value="#{messageManager.locationMessages}" var="message">
                                        <p:column>
                                            <div style="float: left"><h:outputText rendered="#{not messageManager.messageFromMe(message.id)}"   value="#{message.description}"/></div>
                                        </p:column>
                                        <p:column>
                                            <div style="float: right"> <h:outputText rendered="#{messageManager.messageFromMe(message.id)}"  value="#{message.description}"/> </div>
                                        </p:column>
                                    </p:dataTable>
                                </div>
                                <p:inputText value="#{messageManager.messageBeingTyped}"></p:inputText>
                                <p:commandButton value="Send" action="#{messageManager.sendMessage()}" update="MessageViewForm:datalistMessages" />
                                <p:commandButton style="visibility: hidden" id="messageRefreshButton" update="MessageViewForm:datalistMessages" />
                            </h:form>
                        </div>
                    </p:layoutUnit>
                </p:layout>
            </h:form>
        </ui:define>

    </ui:composition>

</html>
